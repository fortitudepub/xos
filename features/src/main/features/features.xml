<?xml version="1.0" encoding="UTF-8"?>
<!-- vi: set et smarttab sw=4 tabstop=4: -->
<!--
CopyRight (c) 2015 xsdn, co,.Ltd

This program and the accompanying materials are made available under the
terms of the Eclipse Public License v1.0 which accompanies this distribution,
and is available at http://www.eclipse.org/legal/epl-v10.html
-->
<features name="odl-xos-${project.version}" xmlns="http://karaf.apache.org/xmlns/features/v1.2.0"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://karaf.apache.org/xmlns/features/v1.2.0 http://karaf.apache.org/xmlns/features/v1.2.0">
  <repository>mvn:org.opendaylight.yangtools/features-yangtools/${yangtools.version}/xml/features</repository>
  <repository>mvn:org.opendaylight.controller/features-adsal/${adsal.version}/xml/features</repository>
  <repository>mvn:org.opendaylight.controller/features-mdsal/${mdsal.version}/xml/features</repository>
  <repository>mvn:org.opendaylight.controller/features-restconf/${mdsal.version}/xml/features</repository>
  <repository>mvn:org.opendaylight.openflowplugin/features-openflowplugin/${openflow.plugin.version}/xml/features</repository>
  <repository>mvn:org.opendaylight.l2switch/features-l2switch/${l2switch.version}/xml/features</repository>
  <feature name='xsdn-xos-model' version='${project.version}' description='XSDN :: xos :: model'>
    <feature version='${yangtools.version}'>odl-yangtools-models</feature>
    <!-- ZDY_NOTE: we use nsf model to build our own model -->
    <feature version="${openflow.plugin.version}">odl-openflowplugin-nsf-model</feature>
    <bundle>mvn:com.xsdn/xos-model/${project.version}</bundle>
  </feature>
  <feature name='xsdn-xos' version='${project.version}' description='XSDN :: xos'>
    <!-- ZDY_NOTE: when we add new dependency feature here, must add the dependency to pom.xml of xos-features,otherwise
      the distribution karaf will does not have the repository copied to the karaf/system directory,
       also we should add the corresponding feature repository on top of this xml. -->
    <feature version="${adsal.version}">odl-adsal-core</feature>
    <feature version='${mdsal.version}'>odl-mdsal-broker</feature>
    <!-- ZDY: surely we want to support clustering, enable clustering default -->
    <feature version='${mdsal.version}'>odl-mdsal-clustering</feature>
    <!-- ZDY: only depend on sourth-bound feature because we want manage flow by ourself instead of
         flowrulemanager of openflowplugin. -->
    <feature version="${openflow.plugin.version}">odl-openflowplugin-southbound</feature>
    <!-- ZDY: add odl-l2switch-packethandler, since we do not want to bother reinvent the packet decoding logic
      NOTE: we should carefully introduce other l2switch features since the functionality provided by it may
      conflict with us. -->
    <feature version="${l2switch.version}">odl-l2switch-packethandler</feature>
    <feature version='${project.version}'>xsdn-xos-model</feature>
    <!-- we copy code from vtn project, which use jackson, so we must add to the bundle list -->
    <bundle>mvn:com.fasterxml.jackson.core/jackson-core/${jackson.version}</bundle>
    <bundle>mvn:com.fasterxml.jackson.core/jackson-annotations/${jackson.version}</bundle>
    <bundle>mvn:com.fasterxml.jackson.core/jackson-databind/${jackson.version}</bundle>
    <bundle>mvn:com.xsdn/xos-main/${project.version}</bundle>
    <configfile finalname="${configfile.directory}/xos.xml">mvn:com.xsdn/xos-main/${project.version}/xml/config</configfile>
  </feature>
  <feature name='xsdn-xos-rest' version='${project.version}' description='XSDN :: xos :: REST'>
    <feature version="${project.version}">xsdn-xos</feature>
    <feature version="${mdsal.version}">odl-restconf</feature>
  </feature>
  <feature name='xsdn-xos-ui' version='${project.version}' description='XSDN :: xos :: UI'>
    <feature version="${project.version}">xsdn-xos-rest</feature>
    <feature version="${dlux.version}">odl-dlux-core</feature>
    <!-- add yangui and yangvisualizer to help view data model without install after startup.
     Note yangvisualizer is not a must but because there are bug in
     lithium packaging so we have to add it here. -->
    <feature version="${dlux.version}">odl-dlux-yangui</feature>
    <feature version="${dlux.version}">odl-dlux-yangvisualizer</feature>
  </feature>

</features>
